name: GitHub Pages Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Inject Discord webhook (feedback)
        run: |
          WEBHOOK='${{ secrets.DISCORD_WEBHOOK }}'
          if [ -z "$WEBHOOK" ]; then
            echo "No webhook secret provided (skipping injection)";
            exit 0;
          fi
          echo "Injecting feedback webhook into index.html via placeholder token"
          ESCAPED=$(printf '%s' "$WEBHOOK" | sed -e 's/[\/&]/\\&/g')
          # Replace only the placeholder token inside the meta tag
          if grep -q '__FEEDBACK_WEBHOOK__' index.html; then
            sed -i "s|__FEEDBACK_WEBHOOK__|$ESCAPED|g" index.html
          else
            echo 'Placeholder token __FEEDBACK_WEBHOOK__ not found in index.html' >&2
            exit 1
          fi
          # Verification
            MATCH_LINE=$(grep -n "feedback-webhook" index.html || true)
            echo "$MATCH_LINE"
            if echo "$MATCH_LINE" | grep -q "content=\"$ESCAPED\""; then
              echo "Webhook meta correctly injected (length ${#WEBHOOK})"
            else
              echo "WARNING: Webhook meta NOT injected" >&2
              exit 1
            fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4